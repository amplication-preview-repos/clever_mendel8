/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  YoutubePlaylist as PrismaYoutubePlaylist,
} from "@prisma/client";

export class YoutubePlaylistServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.YoutubePlaylistCountArgs, "select">
  ): Promise<number> {
    return this.prisma.youtubePlaylist.count(args);
  }

  async youtubePlaylists(
    args: Prisma.YoutubePlaylistFindManyArgs
  ): Promise<PrismaYoutubePlaylist[]> {
    return this.prisma.youtubePlaylist.findMany(args);
  }
  async youtubePlaylist(
    args: Prisma.YoutubePlaylistFindUniqueArgs
  ): Promise<PrismaYoutubePlaylist | null> {
    return this.prisma.youtubePlaylist.findUnique(args);
  }
  async createYoutubePlaylist(
    args: Prisma.YoutubePlaylistCreateArgs
  ): Promise<PrismaYoutubePlaylist> {
    return this.prisma.youtubePlaylist.create(args);
  }
  async updateYoutubePlaylist(
    args: Prisma.YoutubePlaylistUpdateArgs
  ): Promise<PrismaYoutubePlaylist> {
    return this.prisma.youtubePlaylist.update(args);
  }
  async deleteYoutubePlaylist(
    args: Prisma.YoutubePlaylistDeleteArgs
  ): Promise<PrismaYoutubePlaylist> {
    return this.prisma.youtubePlaylist.delete(args);
  }
}
